package org.screamingsandals.nms.mapper.web;

import j2html.tags.ContainerTag;
import j2html.tags.DomContent;
import lombok.Data;
import lombok.EqualsAndHashCode;
import org.screamingsandals.nms.mapper.single.MappingType;
import org.screamingsandals.nms.mapper.utils.MiscUtils;
import org.screamingsandals.nms.mapper.web.parts.CompactTablePart;
import org.screamingsandals.nms.mapper.web.parts.NavbarPart;

import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import static j2html.TagCreator.*;

@EqualsAndHashCode(callSuper = true)
@Data
public class MainPage extends AbstractPage {
    private final List<Map.Entry<String, List<MappingType>>> versions;

    @Override
    protected void configure() {
        title = "NMS mapping browser";
        navbarPart = NavbarPart.builder()
                .currentPage(NavbarPart.CurrentPage.MAIN)
                .build();
    }

    @Override
    protected void constructContent(ContainerTag div) {
        div.with(
                div(
                        div(
                                h5("Welcome on the NMS mapping browser page. This page allows you to browse server-side mappings for Minecraft: Java Edition, and compare different mapping types and versions.").withClass("card-title"),
                                p("This page mainly focuses on Spigot, its forks, and Spigot-Forge hybrids like MohistMC. That means, that this page doesn't contain information about things excluded in Spigot mappings (e.g. package-info). This page also doesn't contain any information about lambdas, anonymous classes or synthetic members (they are generated by the compiler, they are not in the source code)."),
                                p("On the overview page of every version, you can find the licenses for all the mappings and links to their origin."),
                                p(
                                        text("If the class or the package name contains ${V}, it means there should be the CraftBukkit version string (e.g. v1_15_R1, v1_16_R3, ...). If you need the string (not using NMSMapper), please check out this "),
                                        a("page").withHref("https://www.spigotmc.org/wiki/spigot-nms-and-minecraft-versions-1-16/"),
                                        text(" or this "),
                                        a("post").withHref("https://www.spigotmc.org/threads/spigot-nms-and-minecraft-version-overview.233194/#post-3988368"),
                                        text(" for older versions.")
                                ).withClass("text-muted"),
                                p(
                                        text("These mappings are provided \"AS-IS\", with no warranty, so mistakes are possible. We are only solving issues in classes, that we are actively using in ScreamingSandals plugins. If you want to fix anything, feel free to open "),
                                        a("a pull request").withHref("https://github.com/ScreamingSandals/NMSMapper/pulls"),
                                        text(" or contact us on our "),
                                        a("Discord").withHref("https://discord.gg/4xB54Ts"),
                                        text(" server.")
                                ).withClass("text-muted fst-italic")
                        ).withClass("card-body")
                ).withClass("card mb-2")
        );

        div.with(
                new CompactTablePart(
                        "Versions",
                        List.of("Version", "Mappings"),
                        versions.stream()
                                .map(key -> {
                                    var span = span();

                                    for (var k : key.getValue()) {
                                        span.with(MiscUtils.mappingToBadge(k, "ms-2"));
                                    }

                                    return Map.of(
                                            "Version", (DomContent) a(key.getKey()).withHref(key.getKey() + "/"),
                                            "Mappings", span
                                    );
                                })
                                .collect(Collectors.toList())
                ).generate()
        );
    }
}
